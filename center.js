// После работы Оля и Толя решили вместе сходить в тир. После прохождения вводного инструктажа и получения оружия они оказались на позициях для стрельбы, а напротив них находятся n мишеней. Все мишени можно считать фигурами, нанесёнными на бесконечную плоскость, при этом каждая мишень является кругом или прямоугольником, мишени могут накладываться и пересекаться произвольным образом.

// Перед тем как начать стрельбу, Оля и Толя хотят убедиться, что они смогут однозначно идентифицировать результаты своих выстрелов.

// Для этого они договорились провести прямую, которая поделит плоскость с мишенями на две части. Однако, чтобы никому не было обидно, они хотят провести прямую таким образом, чтобы каждая мишень была поделена ровно пополам, то есть для каждого круга и каждого прямоугольника должно быть верно, что прямая делит его на две фигуры равной площади. Когда Оля и Толя наконец закончили прорабатывать все условия разделения мишеней на две части, они начали сомневаться, что провести такую прямую вообще возможно, и просят вас ответить на этот вопрос.

// Формат ввода
// В первой строке входных данных записано целое число  — количество мишеней. Каждая из последующих  строк содержит целое число  обозначающее тип мишени. Если  то мишень является кругом и далее следуют три целых числа 
// и
//  определяющие радиус и координаты центра круга соответственно  Если же  то мишень является прямоугольником, который затем определяют восемь целых чисел  — координаты всех четырёх вершин  перечисленных в порядке обхода по часовой стрелке или против часовой стрелки. Гарантируется, что данные четыре вершины образуют прямоугольник ненулевой площади.

// Формат вывода
// Если существует прямая, которая поделит каждый из имеющихся кругов и прямоугольников на две части одинаковой площади, выведите “Yes”. В противном случае выведите “No”.

// Пример 1
// Ввод	Вывод
// 3	Yes
// 0 1 1 1	
// 0 2 2 2	
// 0 3 3 3	
// Пример 2
// Ввод	Вывод
// 1	Yes
// 1 0 0 0 1 1 1 1 0	
// Пример 3
// Ввод	Вывод
// 3	No
// 1 0 0 0 1 1 1 1 0	
// 0 10 10 10	
// 0 1 2 3	

const greet = (arg) => {
    const len = arg.length;
    const arrOfCenter = [];
    for (let i = 0; i < arg.length; i++) {
      if(arg[i][0] === 0) {
        arrOfCenter.push([arg[i][2], arg[i][3]]);
      } else {
        let centerX = (arg[i][1] + arg[i][5]) / 2;
        let centerY = (arg[i][2] + arg[i][6]) / 2;
        arrOfCenter.push([centerX, centerY]);
      }
    }
    if (arrOfCenter.length === 1) {
      return "Yes"
    }
    const a = [arrOfCenter[1][0] - arrOfCenter[0][0], arrOfCenter[1][1] - arrOfCenter[0][1]];
    for (let i = 2; i < arrOfCenter.length; i++) {
      const b = [arrOfCenter[i][0] - arrOfCenter[0][0], arrOfCenter[i][1] - arrOfCenter[0][1]];
      if(a[0] * b[1] - a[1] * b[0] !== 0) {
        return "No"
      }
    }
    return "Yes"
  }
  
  console.log(greet([
    [0, 1, 1, 1], [0, 2, 2, 2], [0, 3, 3, 3]
  ]));
  console.log(greet([
    [1, 0, 0, 0, 1, 1, 1, 1, 0]
  ]));
  console.log(greet([
    [1, 0, 0, 0, 1, 1, 1, 1, 0], [0, 10, 10, 10], [0, 1, 2, 3]
  ]));
  
  // 1, 0, 0, 0, 1, 1, 1, 1, 0
  // -  1  1  2  2  3  3  4  4
  //    1  2        5  6
  